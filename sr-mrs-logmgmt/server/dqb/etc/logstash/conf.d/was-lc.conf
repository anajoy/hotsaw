input { 
  courier {
    transport => "zmq"
    port => 5044
    curve_secret_key => "v.D4Bn3Y9kMXs--llLOvz@[.Q<wS$:+B]V{bUw.@"
  }
}

filter {

  if [type] == "wassys" {

    grok {

      patterns_dir => [ "/etc/logstash/pattern_sr" ]

      match => [ "message", "^\[%{DATE:date} %{TIME:time} %{TZ_C:tz}\] %{GREEDYDATA:logmsg}" ]

      add_tag => [ "tz_%{tz}" ]

      add_field => {
                     "timestamp" => "%{date} %{time}"
                     "header" => "%{message}"
                   }
    }

    grok{
      match => [ "path", "/opt/was/%{NOTSPACE:cellid}/[AD].*/profiles/%{NOTSPACE:node}/logs/%{DATA:appserver}/%{GREEDYDATA:filename}" ]
      add_tag => [ "%{cellid}" ]
    }

    if [appserver] =~ /...AppServer/ {
      grok {
        match => [ "appserver", "%{NOTSPACE:prefix}AppServer*" ]
      }
    } else {
      mutate {
        add_field => { "prefix" => "WAS" }
      }
    }

    date {
      match => [ "timestamp", "MM/dd/YY HH:mm:ss:SSS" ]
      timezone => "CET"
    }

    mutate {
      gsub => [ "header", "\[[0-9]+/[0-9]+/[0-9]+", "*s#*h#" ]
    }

    ruby {
      code => "
        header_tmp = event['header']
        event['logmsg'] = header_tmp.split('*h#')[0] + event['logmsg']
      "
    }
    
    mutate {
      remove_field => [ "message", "header", "timestamp", "tz", "path", "cellid", "offset", "date", "time" ]
      add_tag => [ "parsed_lc" ] 
    }

    mutate {
      rename => [ "logmsg", "message" ]
    }

    split {
      field  => "message"
      terminator => "*s#"
    }

  }

  if [type] == "wasacc" {
    
    json {
      source => "message"
    }

    grok {
      match => [ "path", "/opt/was/%{NOTSPACE:cellid}/AppServer/profiles/%{NOTSPACE:node}/logs/%{DATA:appserver}/%{GREEDYDATA:filename}" ]
      add_tag => [ "%{cellid}" ]
    }

    grok {
      match => [ "appserver", "%{NOTSPACE:prefix}AppServer*" ]
    }

    date {
      match => [ "timestamp", "[dd/MMM/YYYY:HH:mm:ss Z]" ]
    }

    mutate {
      remove_field => [ "message", "timestamp", "path", "cellid", "offset" ]
    }

    mutate {
      add_tag => [ "parsed_lc" ]
    }


  }

}

output {
  if "parsed_lc" in [tags] {
    elasticsearch {
      protocol => "transport" 
      host => "10.51.21.111"
      cluster => "RICK_Dev"
      index => "was-%{+YYYY.MM.dd}"
    }
  } else {
	if [type] == "wassys" {
    		file { path => "/tmp/_parsefailure.log" }
	}
  }
}

